server.error.whitelabel.enabled: true
spring.jackson.serialization.INDENT_OUTPUT: true

server:
  port: 8080
  address: 127.0.0.1
  session.timeout: 0

spring.data.elasticsearch.properties.node.name: localsearch

#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults: false

#logging.level.org.springframework: ERROR
logging.level.org.hibernate: ERROR
logging.level.org.elasticsearch: ERROR
#logging.level.io.undertow: ERROR
logging.level.org.xnio: ERROR
logging.level.io.mikael: WARN

---
spring.profiles: default

spring:
  datasource:
    platform: h2
    url: "jdbc:h2:${java.io.tmpdir}/hilma;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE"
  jpa:
    show-sql: false
    database: H2
    database-platform: H2

---
spring.profiles: dev-persistent

spring:
  datasource:
    platform: h2
    url: jdbc:h2:./devdb
  jpa:
    database: H2
    generate-ddl: false
    hibernate.ddl-auto: update

---
spring.profiles: test

server:
  port: 0
  address: 127.0.0.1
  session.timeout: 0

management.port: -1

spring:
  datasource:
    platform: h2
    url: "jdbc:h2:mem:;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE"
  jpa:
    database: H2
    generate-ddl: true
    hibernate.ddl-auto: create-drop

---
spring.profiles: local-postgresql

server.port: ${PORT:8080}
server.address: 0.0.0.0

spring:
  main:
    web-environment: true
  datasource:
    url: "jdbc:postgresql:${USER}"
    platform: postgresql
    driverClassName: org.postgresql.Driver
  jpa:
    database: POSTGRESQL
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    generate-ddl: false
    hibernate.ddl-auto: update
